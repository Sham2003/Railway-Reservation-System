/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.miniproject.railwaysystem;

import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
/**
 *
 * @author Subash
 * Background SearchBg.jpg
 */
public class Search extends javax.swing.JFrame {
        Connection conn;
        private DefaultListModel mod;
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
	/**
	 * Creates new form Search
     * @param conn
	 */
	public Search(Connection conn) {
                this.conn = conn;
		initComponents();
                this.setSize(800, 480);
                this.setResizable(false);
                menu.add(panel);
                mod = new DefaultListModel();
                list.setModel(mod);
	}

	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        list = new javax.swing.JList<>();
        menu = new javax.swing.JPopupMenu();
        jPanel2 = new javax.swing.JPanel();
        backBtn = new com.miniproject.railwaysystem.Widgets.KButton();
        formPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        srcStat = new com.miniproject.railwaysystem.Widgets.TextField();
        dstStat = new com.miniproject.railwaysystem.Widgets.TextField();
        jDate = new com.miniproject.railwaysystem.Widgets.TextField();
        kButton1 = new com.miniproject.railwaysystem.Widgets.KButton();
        bg = new javax.swing.JLabel();

        panel.setBackground(new java.awt.Color(255, 255, 255));
        panel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        list.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        jScrollPane1.setViewportView(list);

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
        );

        menu.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.darkGray));
        menu.setFocusable(false);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Railway Reservation System");
        setIconImage(new javax.swing.ImageIcon("D:\\dbms\\RailwaySystem\\src\\main\\java\\com\\miniproject\\railwaysystem\\Assets\\TrainIcon.jpg").getImage());
        setResizable(false);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backBtn.setBackground(new java.awt.Color(255, 102, 102));
        backBtn.setText("<--");
        backBtn.setkEndColor(new java.awt.Color(0, 0, 0));
        backBtn.setkHoverEndColor(new java.awt.Color(204, 204, 204));
        backBtn.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        backBtn.setkHoverStartColor(new java.awt.Color(204, 204, 204));
        backBtn.setkStartColor(new java.awt.Color(102, 102, 102));
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        jPanel2.add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 60, 40));

        formPanel.setBackground(new java.awt.Color(255, 255, 255));
        formPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));

        jLabel2.setFont(new java.awt.Font("Lucida Fax", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 204, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("SEARCH TRAINS");

        srcStat.setForeground(new java.awt.Color(255, 0, 204));
        srcStat.setFont(new java.awt.Font("Kristen ITC", 0, 12)); // NOI18N
        srcStat.setLabelText("Source Station");
        srcStat.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                srcStatHierarchyChanged(evt);
            }
        });
        srcStat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srcStatActionPerformed(evt);
            }
        });
        srcStat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                srcStatKeyReleased(evt);
            }
        });

        dstStat.setForeground(new java.awt.Color(255, 0, 204));
        dstStat.setFont(new java.awt.Font("Kristen ITC", 0, 12)); // NOI18N
        dstStat.setLabelText("Destination Station");
        dstStat.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                dstStatHierarchyChanged(evt);
            }
        });
        dstStat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dstStatKeyReleased(evt);
            }
        });

        jDate.setForeground(new java.awt.Color(255, 0, 204));
        jDate.setFont(new java.awt.Font("Kristen ITC", 0, 12)); // NOI18N
        jDate.setHelperText("dd-MM-yyyy");
        jDate.setLabelText("Journey Date");
        jDate.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                jDateHierarchyChanged(evt);
            }
        });
        jDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDateActionPerformed(evt);
            }
        });
        jDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jDateKeyReleased(evt);
            }
        });

        kButton1.setText("SEARCH");
        kButton1.setFont(new java.awt.Font("Perpetua Titling MT", 0, 14)); // NOI18N
        kButton1.setkBorderRadius(50);
        kButton1.setkEndColor(new java.awt.Color(0, 255, 255));
        kButton1.setkFillButton(false);
        kButton1.setkForeGround(new java.awt.Color(0, 204, 204));
        kButton1.setkHoverColor(new java.awt.Color(0, 0, 255));
        kButton1.setkHoverEndColor(new java.awt.Color(0, 255, 51));
        kButton1.setkHoverForeGround(new java.awt.Color(102, 255, 0));
        kButton1.setkHoverStartColor(new java.awt.Color(0, 204, 51));
        kButton1.setkStartColor(new java.awt.Color(0, 204, 204));
        kButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout formPanelLayout = new javax.swing.GroupLayout(formPanel);
        formPanel.setLayout(formPanelLayout);
        formPanelLayout.setHorizontalGroup(
            formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formPanelLayout.createSequentialGroup()
                .addGap(0, 124, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(130, 130, 130))
            .addGroup(formPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(srcStat, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
                    .addComponent(dstStat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(formPanelLayout.createSequentialGroup()
                .addGap(162, 162, 162)
                .addComponent(kButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        formPanelLayout.setVerticalGroup(
            formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(srcStat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dstStat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(kButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel2.add(formPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 50, 480, 360));

        bg.setIcon(new javax.swing.ImageIcon("D:\\dbms\\RailwaySystem\\src\\main\\java\\com\\miniproject\\railwaysystem\\Assets\\SearchBg.jpeg")); // NOI18N
        jPanel2.add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 480));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void srcStatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_srcStatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_srcStatActionPerformed

    private void srcStatHierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_srcStatHierarchyChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_srcStatHierarchyChanged

    private void srcStatKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_srcStatKeyReleased
        // TODO add your handling code here:
        String search = srcStat.getText().trim();
        if(!search.equals(""))
        {
            mod.removeAllElements();
            for(String item:searchSuggestion(search))
            {
                mod.addElement(item);
            }
            menu.show(srcStat, 0, srcStat.getHeight());
        }
    }//GEN-LAST:event_srcStatKeyReleased

    private void dstStatHierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_dstStatHierarchyChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_dstStatHierarchyChanged

    private void dstStatKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dstStatKeyReleased
        // TODO add your handling code here:
        String search = dstStat.getText().trim();
        if(!search.equals(""))
        {
            mod.removeAllElements();
            for(String item:searchSuggestion(search))
            {
                mod.addElement(item);
            }
            menu.show(dstStat, 0, dstStat.getHeight());
        }
    }//GEN-LAST:event_dstStatKeyReleased

    private void jDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jDateActionPerformed

    private void kButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton1ActionPerformed

            try {
                // TODO add your handling code here:
                
                String src,dest;
                String sql = String.format("SELECT stationid FROM stations WHERE stationname = '%s'",this.srcStat.getText().trim());
                Statement stmt = conn.createStatement();
                stmt.execute(sql);
                ResultSet rs = stmt.getResultSet();
                if(rs.next())
                {
                    src = rs.getString("stationid");
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "Invalid Source Station!!");
                    this.srcStat.setText("");
                    this.dstStat.setText("");
                    return;
                }
                sql = String.format("SELECT stationid FROM stations WHERE stationname = '%s'",this.dstStat.getText().trim());
                stmt = conn.createStatement();
                stmt.execute(sql);
                rs = stmt.getResultSet();
                if(rs.next())
                {
                    dest = rs.getString("stationid");
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "Invalid Destination Station!!");
                    this.srcStat.setText("");
                    this.dstStat.setText("");
                    return;
                }
                sql = """
                      SELECT distinct(t1.trainid)
                      	FROM trainStations t1
                      	JOIN trainStations t2 ON t1.trainid = t2.trainid
                      	JOIN trainclassinfo tc ON t1.trainid = tc.trainid
                      	WHERE t1.stationid = ?
                        	AND t2.stationid = ?
                      	AND tc.tdate = ?
                      	AND t1.arrival < t2.arrival
                      """;
                java.util.Date d;
                d = sdf.parse(jDate.getText());
                java.sql.Date sdate = new java.sql.Date(d.getTime());
                PreparedStatement stmt2 = conn.prepareStatement(sql);
                stmt2.setString(1, src);
                stmt2.setString(2, dest);
                stmt2.setDate(3, sdate);
                stmt2.execute();
                rs = stmt2.getResultSet();
                int count=0;
                ArrayList<String> tids = new ArrayList();
                while(rs.next())
                {
                    count++;
                    tids.add(rs.getString(1));
                }
                if(tids.isEmpty())
                {
                    JOptionPane.showMessageDialog(this, "No Valid Trains Between those Stations on the given date!!!");
                    this.srcStat.setText("");
                    this.dstStat.setText("");
                }
                else
                {
                    this.dispose();
                    DisplayTrain tt = new DisplayTrain(conn,src,dest,tids,sdate);
                    tt.setVisible(true);
                }
                
            } catch (SQLException ex) {
                Logger.getLogger(Search.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(this, "Invalid Journey Date!!!");
                Logger.getLogger(Search.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_kButton1ActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        new MainPage(this.conn).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backBtnActionPerformed

    private void jDateHierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jDateHierarchyChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jDateHierarchyChanged

    private boolean isDateValid()
    {
        String dStr = this.jDate.getText();
        if (dStr.equals(""))
        {
            return false;
        }
        try {
            sdf.parse(dStr);
            return true;
        } catch (ParseException ex) {
            return false;
        }
    }
    
    private void jDateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jDateKeyReleased
        // TODO add your handling code here:
        if(isDateValid())
        {
            this.jDate.setValidText(true);
        }
        else
        {
            this.jDate.setValidText(false);
        }
        this.jDate.repaint();
        repaint();
    }//GEN-LAST:event_jDateKeyReleased
    
    public String[] searchSuggestion(String search)
    {
            try {
                ArrayList<String> arr= new ArrayList();
                String sql = "SELECT * FROM stations WHERE stationname LIKE ?";
                PreparedStatement stmt = conn.prepareStatement(sql);
                stmt.setString(1, search+"%");
                stmt.execute();
                ResultSet rs = stmt.getResultSet();
                while(rs.next())
                {
                    arr.add(rs.getString(2)+"-"+rs.getString(1));
                }
                if(!arr.isEmpty())
                {
                    String st[] = new String[arr.size()];
                    arr.toArray(st);
                    return st;
                }
                else
                {
                    String st[] = {"No Station Found!!!"};
                    return st;
                }
            } catch (SQLException ex) {
                Logger.getLogger(Search.class.getName()).log(Level.SEVERE, null, ex);
            }
            String st[] = {"No Station Found!!!"};
            return st;
    }
    
    
    public void dstsearchActionPerformed(java.awt.event.ActionEvent evt){
        
    }
	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>
		//</editor-fold>
                
		/* Create and display the form */
		java.awt.EventQueue.invokeLater(() -> {
                    new Search(null).setVisible(true);
                });
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.miniproject.railwaysystem.Widgets.KButton backBtn;
    private javax.swing.JLabel bg;
    private com.miniproject.railwaysystem.Widgets.TextField dstStat;
    private javax.swing.JPanel formPanel;
    private com.miniproject.railwaysystem.Widgets.TextField jDate;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private com.miniproject.railwaysystem.Widgets.KButton kButton1;
    private javax.swing.JList<String> list;
    private javax.swing.JPopupMenu menu;
    private javax.swing.JPanel panel;
    private com.miniproject.railwaysystem.Widgets.TextField srcStat;
    // End of variables declaration//GEN-END:variables
}
